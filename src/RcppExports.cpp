// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// bootstrapAucStratified
std::vector<double> bootstrapAucStratified(const std::vector<double>& controls, const std::vector<double>& cases, const int bootN);
RcppExport SEXP pROC_bootstrapAucStratified(SEXP controlsSEXP, SEXP casesSEXP, SEXP bootNSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const std::vector<double>& >::type controls(controlsSEXP );
        Rcpp::traits::input_parameter< const std::vector<double>& >::type cases(casesSEXP );
        Rcpp::traits::input_parameter< const int >::type bootN(bootNSEXP );
        std::vector<double> __result = bootstrapAucStratified(controls, cases, bootN);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// delongPlacementsCpp
List delongPlacementsCpp(List roc);
RcppExport SEXP pROC_delongPlacementsCpp(SEXP rocSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< List >::type roc(rocSEXP );
        List __result = delongPlacementsCpp(roc);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// rocUtilsPerfsAllC
List rocUtilsPerfsAllC(NumericVector thresholds, NumericVector controls, NumericVector cases, std::string direction);
RcppExport SEXP pROC_rocUtilsPerfsAllC(SEXP thresholdsSEXP, SEXP controlsSEXP, SEXP casesSEXP, SEXP directionSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type thresholds(thresholdsSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type controls(controlsSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type cases(casesSEXP );
        Rcpp::traits::input_parameter< std::string >::type direction(directionSEXP );
        List __result = rocUtilsPerfsAllC(thresholds, controls, cases, direction);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
